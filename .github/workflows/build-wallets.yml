name: Build BrrrFren Wallets

permissions:
  contents: write

on:
  push:
    tags: ['v*']

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      # ---------- Cache dependencies ----------
      - name: Cache Linux dependencies
        if: runner.os == 'Linux'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/apt
            /var/cache/apt
          key: ${{ runner.os }}-deps-${{ hashFiles('**/configure.ac') }}
          
      # ---------- Install dependencies ----------
      - name: Install build deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libtool autotools-dev automake pkg-config \
            libevent-dev libssl-dev libboost-all-dev \
            qtbase5-dev qttools5-dev-tools protobuf-compiler \
            libqrencode-dev libminiupnpc-dev libdb++-dev
            
      - name: Setup MSYS2 (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-qt5
            mingw-w64-x86_64-boost
            mingw-w64-x86_64-protobuf
            mingw-w64-x86_64-libevent
            mingw-w64-x86_64-qrencode
            mingw-w64-x86_64-miniupnpc
            mingw-w64-x86_64-db
            
      # ---------- Build ----------
      - name: Build BrrrFren (Linux)
        if: runner.os == 'Linux'
        run: |
          ./autogen.sh
          ./configure --with-gui --enable-reduce-exports
          make -j$(nproc)
          
      - name: Build BrrrFren (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          ./autogen.sh
          ./configure --with-gui --enable-reduce-exports
          make -j$(nproc)
          
      # ---------- Package binaries ----------
      - name: Package binaries
        shell: bash
        run: |
          VER=${GITHUB_REF#refs/tags/}
          mkdir -p release
          
          case $RUNNER_OS in
            Linux)
              # Package Linux binaries
              tar -czvf release/brrrfren-${VER}-linux-x64.tar.gz \
                src/qt/dogecoin-qt src/dogecoind src/dogecoin-cli
              # Generate checksums
              cd release && sha256sum *.tar.gz > checksums-linux.txt
              ;;
            Windows)
              # Package Windows binaries
              7z a release/brrrfren-${VER}-win-x64.zip \
                src/qt/*.exe src/*.exe
              # Generate checksums
              cd release && sha256sum *.zip > checksums-windows.txt
              ;;
          esac
          
      # ---------- Upload release assets ----------
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.tar.gz
            release/*.zip
            release/checksums-*.txt
          draft: false
          prerelease: false
          generate_release_notes: true
