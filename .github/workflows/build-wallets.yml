name: Build BrrrFren Wallets

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/apt
          ~/.local/share/vcpkg
        key: ${{ matrix.os }}-deps-${{ hashFiles('**/configure.ac') }}
        restore-keys: |
          ${{ matrix.os }}-deps-

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential libtool autotools-dev automake pkg-config \
          libevent-dev libssl-dev \
          libboost-system-dev libboost-filesystem-dev libboost-thread-dev libboost-chrono-dev \
          libboost-iostreams-dev libboost-program-options-dev libboost-test-dev \
          qtbase5-dev qttools5-dev-tools protobuf-compiler \
          libqrencode-dev libminiupnpc-dev libdb++-dev

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-autotools
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-boost
          mingw-w64-x86_64-boost-libs
          mingw-w64-x86_64-libevent
          mingw-w64-x86_64-db
          mingw-w64-x86_64-openssl
          mingw-w64-x86_64-qt5-base
          mingw-w64-x86_64-qt5-tools
          mingw-w64-x86_64-protobuf
          mingw-w64-x86_64-qrencode
          mingw-w64-x86_64-miniupnpc

    - name: Build BrrrFren (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        ./autogen.sh
        ./configure --enable-static --disable-shared --with-pic --with-incompatible-bdb --with-qt=no
        make -j$(nproc)
        strip src/brrrfrend src/brrrfren-cli src/brrrfren-tx
        mkdir -p dist
        cp src/brrrfrend src/brrrfren-cli src/brrrfren-tx dist/

    - name: Build BrrrFren (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        ./autogen.sh
        export BOOST_ROOT=/mingw64
        export BOOST_INCLUDEDIR=/mingw64/include
        export BOOST_LIBRARYDIR=/mingw64/lib
        export BOOST_SYSTEM_LIB=boost_system-mt
        export BOOST_FILESYSTEM_LIB=boost_filesystem-mt
        export BOOST_THREAD_LIB=boost_thread-mt
        export BOOST_CHRONO_LIB=boost_chrono-mt
        export BOOST_PROGRAM_OPTIONS_LIB=boost_program_options-mt
        export BOOST_UNIT_TEST_FRAMEWORK_LIB=boost_unit_test_framework-mt
        ./configure --enable-static --disable-shared --with-pic --with-incompatible-bdb --with-qt=no --with-boost=/mingw64
        make -j$(nproc)
        strip src/brrrfrend.exe src/brrrfren-cli.exe src/brrrfren-tx.exe
        mkdir -p dist
        cp src/brrrfrend.exe src/brrrfren-cli.exe src/brrrfren-tx.exe dist/

    - name: Package binaries
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          cd dist
          tar -czf ../brrrfren-linux-x64.tar.gz *
          cd ..
          echo "ASSET_NAME=brrrfren-linux-x64.tar.gz" >> $GITHUB_ENV
        else
          cd dist
          7z a ../brrrfren-windows-x64.zip *
          cd ..
          echo "ASSET_NAME=brrrfren-windows-x64.zip" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Generate checksums
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sha256sum brrrfren-linux-x64.tar.gz > brrrfren-linux-x64.tar.gz.sha256
        else
          sha256sum brrrfren-windows-x64.zip > brrrfren-windows-x64.zip.sha256
        fi
      shell: bash

    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET_NAME }}
          ${{ env.ASSET_NAME }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
