name: Build BrrrFren Wallets

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential libtool autotools-dev automake pkg-config \
          libevent-dev libssl-dev \
          libboost-system-dev libboost-filesystem-dev libboost-thread-dev libboost-chrono-dev \
          libboost-iostreams-dev libboost-program-options-dev libboost-test-dev \
          qtbase5-dev qttools5-dev-tools protobuf-compiler \
          libqrencode-dev libminiupnpc-dev libdb++-dev

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-autotools
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-boost
          mingw-w64-x86_64-boost-libs
          mingw-w64-x86_64-libevent
          mingw-w64-x86_64-db
          mingw-w64-x86_64-openssl
          mingw-w64-x86_64-qt5-base
          mingw-w64-x86_64-qt5-tools
          mingw-w64-x86_64-protobuf
          mingw-w64-x86_64-qrencode
          mingw-w64-x86_64-miniupnpc

    - name: Build (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        ./autogen.sh
        ./configure --enable-static --with-pic --with-incompatible-bdb --with-qt=yes
        make -j$(nproc)
        
        mkdir -p dist
        cp src/poemd src/poem-cli src/poem-tx dist/
        if [ -f src/qt/poem-qt ]; then
          cp src/qt/poem-qt dist/
        fi

    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        ./autogen.sh
        ./configure --enable-static --with-pic --with-incompatible-bdb --with-qt=yes
        make -j1 V=1
        
        mkdir -p dist
        cp src/poemd.exe src/poem-cli.exe src/poem-tx.exe dist/
        if [ -f src/qt/poem-qt.exe ]; then
          cp src/qt/poem-qt.exe dist/
        fi

    - name: Package binaries
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
          cd dist
          tar -czf ../poem-linux-x64.tar.gz *
          cd ..
          echo "ASSET_NAME=poem-linux-x64.tar.gz" >> $GITHUB_ENV
        else
          cd dist
          7z a ../poem-windows-x64.zip *
          cd ..
          echo "ASSET_NAME=poem-windows-x64.zip" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Generate checksums
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
          sha256sum poem-linux-x64.tar.gz > poem-linux-x64.tar.gz.sha256
        else
          sha256sum poem-windows-x64.zip > poem-windows-x64.zip.sha256
        fi
      shell: bash

    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET_NAME }}
          ${{ env.ASSET_NAME }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
