name: PoEM Core Build

on:
  push:
    branches: [ "main", "master", "dev", "develop", "release/*", "fix-build" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with debugging enabled'
        type: boolean
        required: false
        default: false

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libtool \
          autotools-dev \
          automake \
          pkg-config \
          libssl-dev \
          libevent-dev \
          bsdmainutils \
          libboost1.74-dev \
          libboost-system1.74-dev \
          libboost-filesystem1.74-dev \
          libboost-chrono1.74-dev \
          libboost-program-options1.74-dev \
          libboost-test1.74-dev \
          libboost-thread1.74-dev \
          git \
          wget \
          ca-certificates
        
        # Install specific version of Boost if needed
        # wget https://boostorg.jfrog.io/artifactory/main/release/1.74.0/source/boost_1_74_0.tar.bz2
        # tar xf boost_1_74_0.tar.bz2
        # cd boost_1_74_0
        # ./bootstrap.sh --with-libraries=system,filesystem,thread,chrono,program_options,test
        # sudo ./b2 install
    
    - name: Build
      run: |
        # Set compiler flags for maximum compatibility
        export CXXFLAGS="-O2 -pipe -std=c++11 -D_GLIBCXX_USE_CXX11_ABI=0 -fPIC"
        export CFLAGS="-O2 -pipe -fPIC"
        export CPPFLAGS="-D_GLIBCXX_USE_CXX11_ABI=0"
        export LDFLAGS="-Wl,-O1 -Wl,--as-needed"
        
        # Set Boost root if using custom Boost installation
        # export BOOST_ROOT="/usr/local"
        
        ./autogen.sh
        ./configure \
          --prefix=${{ github.workspace }}/depends/x86_64-linux-gnu \
          --disable-tests \
          --disable-bench \
          --without-gui \
          --disable-wallet \
          --disable-zmq \
          --disable-man \
          CXXFLAGS="$CXXFLAGS" \
          CFLAGS="$CFLAGS" \
          CPPFLAGS="$CPPFLAGS"
        make -j$(nproc) V=1
    
    - name: Check Binary
      run: |
        file src/poemd
        ls -la src/poemd
    
    - name: Upload Binary
      uses: actions/upload-artifact@v4
      with:
        name: poem-linux-binaries
        path: src/poemd
        if-no-files-found: error
        retention-days: 5
